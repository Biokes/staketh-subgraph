type Transaction @entity(immutable: true) {
  id: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  timestamp: BigInt!
}
type EmergencyWithdrawn @entity(immutable: true) {
  id: Bytes!
  user: User! # address
  amount: BigInt! # uint256
  penalty: BigInt! # uint256
  newTotalStaked: BigInt! # uint256
  transactionData: Transaction!
}

type RewardsClaimed @entity(immutable: true) {
  id: Bytes!
  user: User! # address
  amount: BigInt! # uint256
  newPendingRewards: BigInt! # uint256
  totalStaked: BigInt! # uint256
  transactionData: Transaction!
}

type Staked @entity(immutable: true) {
  id: Bytes!
  user: User! # address
  amount: BigInt! # uint256
  newTotalStaked: BigInt! # uint256
  currentRewardRate: BigInt! # uint256
  transactionData: Transaction!

}

type Withdrawn @entity(immutable: true) {
  id: Bytes!
  user: User! # address
  amount: BigInt! # uint256
  newTotalStaked: BigInt! # uint256
  currentRewardRate: BigInt! # uint256
  rewardsAccrued: BigInt! # uint256
  transactionData: Transaction!
}
type User @entity(immutable:false) {
  id: Bytes!
  stakes: [Staked!]! @derivedFrom(field: "user")
  withdrawals: [Withdrawn!]! @derivedFrom(field: "user")
  emergencyWithdrawals: [EmergencyWithdrawn!]! @derivedFrom(field: "user")
  rewardClaims: [RewardsClaimed!]! @derivedFrom(field: "user")
}
